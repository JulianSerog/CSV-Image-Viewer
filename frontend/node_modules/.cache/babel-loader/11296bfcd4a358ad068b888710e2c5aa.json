{"ast":null,"code":"var _jsxFileName = \"/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/FileInput/FileInput.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages, uploadCsv } from '../../actions/imageActions';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let file = this.fileInput.current.files[0];\n\n    if (file) {\n      this.setState({\n        file: file\n      });\n      let payload = new FormData(); //{file_name: file.name, content: file}\n\n      payload.append('file', file);\n      this.props.uploadCsv(payload);\n    } else {\n      alert('there is no file submitted!');\n    }\n  }\n\n  toggleGrayscale() {\n    this.props.grayscale = !this.props.grayscale;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Upload file: \", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Grayscale:\", React.createElement(\"input\", {\n      name: \"grayscale\",\n      type: \"checkbox\",\n      checked: this.props.grayscale,\n      className: \"form-check-input\",\n      onChange: () => toggleGrayscale(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const _state$imageState = state.imageState,\n        images = _state$imageState.images,\n        batchId = _state$imageState.batchId,\n        page = _state$imageState.page,\n        grayscale = _state$imageState.grayscale;\n  return {\n    images: images,\n    batchId: batchId,\n    page: page,\n    grayscale: grayscale\n  };\n}\n\nexport default connect(mapStateToProps, {\n  uploadCsv\n})(FileInput);","map":{"version":3,"sources":["/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/FileInput/FileInput.js"],"names":["React","connect","fetchImages","uploadCsv","FileInput","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","file","current","files","setState","payload","FormData","append","alert","toggleGrayscale","grayscale","render","mapStateToProps","state","imageState","images","batchId","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,4BAAvC;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiBV,KAAK,CAACW,SAAN,EAAjB;AACD;;AAEDH,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG,KAAKJ,SAAL,CAAeK,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAX;;AAEA,QAAIF,IAAJ,EAAU;AACR,WAAKG,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACA,UAAII,OAAO,GAAG,IAAIC,QAAJ,EAAd,CAFQ,CAEqB;;AAC7BD,MAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuBN,IAAvB;AAEA,WAAKP,KAAL,CAAWJ,SAAX,CAAqBe,OAArB;AACD,KAND,MAMO;AACLG,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,eAAe,GAAG;AAChB,SAAKf,KAAL,CAAWgB,SAAX,GAAuB,CAAC,KAAKhB,KAAL,CAAWgB,SAAnC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWgB,SAHtB;AAIE,MAAA,SAAS,EAAC,kBAJZ;AAKE,MAAA,QAAQ,EAAE,MAAMD,eAAe,EALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF,CADF,CADF;AAoBD;;AA/CqC;;AAkDxC,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,4BACeA,KAAK,CAACC,UADrB;AAAA,QACtBC,MADsB,qBACtBA,MADsB;AAAA,QACdC,OADc,qBACdA,OADc;AAAA,QACLC,IADK,qBACLA,IADK;AAAA,QACCP,SADD,qBACCA,SADD;AAG9B,SAAO;AACLK,IAAAA,MAAM,EAAEA,MADH;AAELC,IAAAA,OAAO,EAAEA,OAFJ;AAGLC,IAAAA,IAAI,EAAEA,IAHD;AAILP,IAAAA,SAAS,EAAEA;AAJN,GAAP;AAMD;;AAED,eAAetB,OAAO,CAACwB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,SAAxC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages, uploadCsv } from '../../actions/imageActions';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let file = this.fileInput.current.files[0];\n\n    if (file) {\n      this.setState({file: file});\n      let payload = new FormData();//{file_name: file.name, content: file}\n      payload.append('file', file);\n      \n      this.props.uploadCsv(payload);\n    } else {\n      alert('there is no file submitted!');\n    }\n  }\n\n  toggleGrayscale() {\n    this.props.grayscale = !this.props.grayscale;\n  }\n\n  render() {\n    return (\n      <div className='row'>\n        <div className='col-12 text-center'>\n          <form onSubmit={this.handleSubmit}>\n            <label>Upload file: <input type=\"file\" ref={this.fileInput} /></label>\n\n            <label>Grayscale:\n              <input\n                name='grayscale'\n                type='checkbox'\n                checked={this.props.grayscale}\n                className='form-check-input'\n                onChange={() => toggleGrayscale()}\n              />\n            </label>\n            <button type='submit'>Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { images, batchId, page, grayscale } = state.imageState;\n\n  return {\n    images: images,\n    batchId: batchId,\n    page: page,\n    grayscale: grayscale\n  }\n}\n\nexport default connect(mapStateToProps, { uploadCsv })(FileInput)"]},"metadata":{},"sourceType":"module"}