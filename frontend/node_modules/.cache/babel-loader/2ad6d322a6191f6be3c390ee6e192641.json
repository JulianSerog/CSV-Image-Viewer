{"ast":null,"code":"import { FETCH_IMAGES, UPLOAD_CSV, TOGGLE_GRAYSCALE } from './types';\nimport { getImages, postCsv } from '../services/CsvService';\nexport const fetchImages = (batch_id, page_id) => dispatch => {\n  getImages(batch_id, page_id).then(response => {\n    dispatch({\n      type: FETCH_IMAGES,\n      payload: response.data\n    });\n  });\n};\nexport const uploadCsv = file => dispatch => {\n  postCsv(file).then(response => {\n    dispatch({\n      type: UPLOAD_CSV,\n      payload: response.data\n    });\n  });\n};\nexport const toggleGrayscale = grayscale => {\n  dispatch({\n    type: TOGGLE_GRAYSCALE,\n    payload: grayscale\n  });\n};","map":{"version":3,"sources":["/Users/esaserog/work/projects/goTennaEsa/frontend/src/actions/imageActions.js"],"names":["FETCH_IMAGES","UPLOAD_CSV","TOGGLE_GRAYSCALE","getImages","postCsv","fetchImages","batch_id","page_id","dispatch","then","response","type","payload","data","uploadCsv","file","toggleGrayscale","grayscale"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,gBAAnC,QAA2D,SAA3D;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,wBAAnC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC5DL,EAAAA,SAAS,CAACG,QAAD,EAAWC,OAAX,CAAT,CAA6BE,IAA7B,CAAkCC,QAAQ,IAAI;AAC5CF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX,YADC;AAEPY,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAUP,QAAQ,IAAI;AAC7CJ,EAAAA,OAAO,CAACW,IAAD,CAAP,CAAcN,IAAd,CAAmBC,QAAQ,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,UADC;AAEPW,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMG,eAAe,GAAIC,SAAD,IAAe;AAC5CT,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAET,gBADC;AAEPU,IAAAA,OAAO,EAAEK;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import { FETCH_IMAGES, UPLOAD_CSV, TOGGLE_GRAYSCALE } from './types';\nimport { getImages, postCsv } from '../services/CsvService';\n\nexport const fetchImages = (batch_id, page_id) => dispatch => {\n  getImages(batch_id, page_id).then(response => {\n    dispatch({\n      type: FETCH_IMAGES,\n      payload: response.data\n    })\n  });\n}\n\nexport const uploadCsv = (file) => dispatch => {\n  postCsv(file).then(response => {\n    dispatch({\n      type: UPLOAD_CSV,\n      payload: response.data\n    })\n  });\n}\n\nexport const toggleGrayscale = (grayscale) => {\n  dispatch({\n    type: TOGGLE_GRAYSCALE,\n    payload: grayscale\n  })\n}"]},"metadata":{},"sourceType":"module"}