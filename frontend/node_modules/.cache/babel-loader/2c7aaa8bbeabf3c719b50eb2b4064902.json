{"ast":null,"code":"var _jsxFileName = \"/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/FileInput/FileInput.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages, uploadCsv } from '../../actions/imageActions';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let file = this.fileInput.current.files[0];\n\n    if (file) {\n      this.setState({\n        file: file\n      });\n      let payload = new FormData(); //{file_name: file.name, content: file}\n\n      payload.append(\"file\", file);\n      this.props.uploadCsv(payload);\n    } else {\n      alert(\"there is no file submitted!\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Upload file: \", React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  images: state.images.items\n});\n\nexport default connect(mapStateToProps, {\n  uploadCsv\n})(FileInput);","map":{"version":3,"sources":["/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/FileInput/FileInput.js"],"names":["React","connect","fetchImages","uploadCsv","FileInput","Component","constructor","props","fileInput","createRef","handleSubmit","event","preventDefault","file","current","files","setState","payload","FormData","append","alert","render","e","mapStateToProps","state","images","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,4BAAvC;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBR,KAAK,CAACS,SAAN,EAAjB;AACD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG,KAAKL,SAAL,CAAeM,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAX;;AAEA,QAAIF,IAAJ,EAAU;AACR,WAAKG,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACA,UAAII,OAAO,GAAG,IAAIC,QAAJ,EAAd,CAFQ,CAEqB;;AAC7BD,MAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuBN,IAAvB;AAEA,WAAKN,KAAL,CAAWJ,SAAX,CAAqBc,OAArB;AACD,KAND,MAMO;AACLG,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKZ,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKF,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AA5BqC;;AA+BxC,MAAMe,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC;AADW,CAAL,CAA7B;;AAIA,eAAezB,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,SAAxC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchImages, uploadCsv } from '../../actions/imageActions';\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let file = this.fileInput.current.files[0];\n\n    if (file) {\n      this.setState({file: file});\n      let payload = new FormData();//{file_name: file.name, content: file}\n      payload.append(\"file\", file);\n\n      this.props.uploadCsv(payload);\n    } else {\n      alert(\"there is no file submitted!\");\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={(e) => this.handleSubmit()}>\n        <label>Upload file: <input type=\"file\" ref={this.fileInput} /></label>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  images: state.images.items\n})\n\nexport default connect(mapStateToProps, { uploadCsv })(FileInput)"]},"metadata":{},"sourceType":"module"}