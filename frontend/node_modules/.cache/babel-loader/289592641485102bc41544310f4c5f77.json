{"ast":null,"code":"var _jsxFileName = \"/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/Gallery/Gallery.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Gallery.css';\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderImages() {\n    if (!this.props.images || this.props.images.length === 0) {\n      return React.createElement(\"div\", {\n        className: \"no-images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"There are no images to display!\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"row gallery-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.images.map((url, key) => {\n        return React.createElement(\"div\", {\n          className: \"col-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"picture\",\n          src: url,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }));\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gallery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.renderImages());\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const _state$imageState = state.imageState,\n        images = _state$imageState.images,\n        batchId = _state$imageState.batchId,\n        page = _state$imageState.page;\n  return {\n    images: images,\n    batchId: batchId,\n    page: page\n  };\n}\n\nexport default connect(mapStateToProps)(Gallery);","map":{"version":3,"sources":["/Users/esaserog/work/projects/goTennaEsa/frontend/src/components/Gallery/Gallery.js"],"names":["React","PropTypes","connect","Gallery","Component","constructor","props","renderImages","images","length","map","url","key","render","mapStateToProps","state","imageState","batchId","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKD,KAAL,CAAWE,MAAZ,IAAsB,KAAKF,KAAL,CAAWE,MAAX,CAAkBC,MAAlB,KAA6B,CAAvD,EAA0D;AACxD,aAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKH,KAAL,CAAWE,MAAX,CAAkBE,GAAlB,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpC,eACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,GAAG,EAAED,GAA9B;AAAmC,UAAA,GAAG,EAAEC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANC,CADJ,CADF;AAWD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,KAAKN,YAAL,EAFJ,CADF;AAMD;;AA9BmC;;AAiCtC,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,4BACIA,KAAK,CAACC,UADV;AAAA,QACtBR,MADsB,qBACtBA,MADsB;AAAA,QACdS,OADc,qBACdA,OADc;AAAA,QACLC,IADK,qBACLA,IADK;AAE9B,SAAO;AACLV,IAAAA,MAAM,EAAEA,MADH;AAELS,IAAAA,OAAO,EAAEA,OAFJ;AAGLC,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AAED,eAAehB,OAAO,CAACY,eAAD,CAAP,CAAyBX,OAAzB,CAAf","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Gallery.css';\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderImages() {\n    if (!this.props.images || this.props.images.length === 0) {\n      return <div className=\"no-images\">There are no images to display!</div>\n    } else {\n      return (\n        <div className=\"row gallery-container\">\n          { this.props.images.map((url, key) => {\n            return (\n              <div className=\"col-3\">\n                <img className=\"picture\" src={url} key={key} />\n              </div>\n            )\n          }) }\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"gallery\">\n        <hr />\n        { this.renderImages() }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { images, batchId, page } = state.imageState;\n  return {\n    images: images,\n    batchId: batchId,\n    page: page\n  }\n}\n\nexport default connect(mapStateToProps)(Gallery);\n"]},"metadata":{},"sourceType":"module"}